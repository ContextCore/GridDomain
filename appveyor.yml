version: 1.0.{build}
#stack: mssql
branches:
  only:
  - develop
image: Ubuntu

install:
- ps: |
    ls 
    $tag = git describe --tags --abbrev=0
    echo $tag
    $version = $env:appveyor_build_number
    echo $version
    $fullVersion = "$tag+$version"
    echo fullVersion
    Update-AppveyorBuild -Version $tag
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}-alfa'
  package_version: '{version}-alfa'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}-alfa'
environment:
  APPVEYOR_SSH_KEY: ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBI7S8beSMm0ePKq3CM3r4a0W/7OU+cwb8ZPyMoeeTtz0q0sPHoO1psD1jPh/2+v8UKToLdDJxhtxbkNTv8WeVME=
  APPVEYOR_SSH_BLOCK: true
  WriteModel: Server=localhost;Database=master;User ID=sa;Password=Password12!
  ReadModel: Server=localhost;Database=AutoTestRead;User ID=sa;Password=Password12!
  Quartz: Server=localhost;Database=Quartz;User ID=sa;Password=Password12!
services: mssql
build_script:
- sh: |
    #set -e 
    
    #curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -
    
    printenv APPVEYOR_BUILD_VERSION
    
    dotnet build GridDomain.sln -c Release -v Minimal /l:"/opt/appveyor/build-agent/AppVeyor.MSBuildLogger.dll"
    dotnet pack GridDomain.sln -c Release -v Minimal --include-symbols --include-source --no-build /l:"/opt/appveyor/build-agent/AppVeyor.MSBuildLogger.dll"
test_script:
- sh: |
    
    runTests()
    {
      testsName=$1
      testsFolder=$2
      cd $testsFolder
      dotnet test --no-build --configuration Release --no-restore --logger trx > TestsOutput.txt
      TestResult=$?
      path=~/projects/griddomain-mdlr7/"$testsFolder"/bin/Release/netcoreapp2.0/Logs/*
      echo $path

      zip -j -r ./"$testsName"Output.zip ./TestResults/*
      zip -j -r ./"$testsName"Logs.zip ./bin/Release/netcoreapp2.0/Logs/*

      if [ $TestResult -ne 0 ];then
         echo should exiting...
            #exit #$TestResult
      fi
      echo continue 
      cd ..
    }

    ls 
    sqlcmd -S localhost -U SA -P 'Password12!' -Q 'select @@VERSION'

    sqlcmd -S localhost -U SA -P "Password12!" -Q "Use [master]; CREATE DATABASE [AutoTestRead];"

    sqlcmd -S localhost -U SA -P "Password12!" -i GridDomain.Node.Persistence.Sql/Persistence.sql

    sqlcmd -S localhost -U SA -P "Password12!" -i GridDomain.Node.Persistence.Sql/Human_schema.sql

    #mkdir ~/QuartzMemoryOptimizedData

    sqlcmd -S localhost -U SA -P "Password12!" -i GridDomain.Scheduling/CreateDatabase.sql

    runTests UnitTests GridDomain.Tests.Unit
    runTests ClusterUnitTests GridDomain.Tests.Unit.Cluster
    runTests AcceptanceTests GridDomain.Tests.Acceptance

    #curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -

    runTests ClusterAcceptanceTests GridDomain.Tests.Acceptance.Cluster


artifacts:
- path: '**\GridDomain.*.nupkg'
  name: Packages
- path: '**\*.zip'
  name: TestResults
deploy:
  - provider: Environment
    name: MyGet development feed