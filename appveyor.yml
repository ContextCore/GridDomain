version: 1.0.{build}
branches:
  only:
  - develop
image: Ubuntu
#init:
#- sh: "sqlcmd -S localhost -U SA -P Password12! -Q 'select @@VERSION'"
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}-alfa'
  package_version: '{version}-alfa'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}-alfa'
environment:
  APPVEYOR_SSH_KEY: ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBI7S8beSMm0ePKq3CM3r4a0W/7OU+cwb8ZPyMoeeTtz0q0sPHoO1psD1jPh/2+v8UKToLdDJxhtxbkNTv8WeVME=
  APPVEYOR_SSH_BLOCK: true
services: mssql
build_script:
- sh: |
    set -e 
    server="(local)\SQL2017"
    echo $server
    systemctl status mssql-server.service
    sqlcmd -S localhost -U SA -P 'Password12!' -Q 'select @@VERSION'
  
    printenv APPVEYOR_BUILD_VERSION
    printenv APPVEYOR_BUILD_NUMBER
    dotnet build GridDomain.sln -c Release -v Minimal /l:"/opt/appveyor/build-agent/AppVeyor.MSBuildLogger.dll"
    dotnet pack GridDomain.sln -c Release -v Minimal --include-symbols --include-source --no-build /l:"/opt/appveyor/build-agent/AppVeyor.MSBuildLogger.dll"
test_script:
- sh: |
    ls
    runTests()
    {
      testsName=$1
      testsFolder=$2
      cd $testsFolder
      dotnet test --no-build --configuration Release --no-restore --logger trx > TestsOutput.txt
      TestResult=$?
      path=~/projects/griddomain-tvtpq/"$testsFolder"/bin/Release/netcoreapp2.0/Logs/*
      echo $path
      7z a "$testsName"Output TestResults/*
      7z a "$testsName"Logs $path
      if [ $TestResult -ne 0 ];then
         echo should exiting...
            #exit #$TestResult
      fi
      echo continue 
      cd ..
    }
    runTests UnitTests GridDomain.Tests.Unit
    runTests ClusterUnitTests GridDomain.Tests.Unit.Cluster
artifacts:
- path: '**\GridDomain.*.nupkg'
  name: Packages
- path: '**\*.7z'
  name: UnitTestResults