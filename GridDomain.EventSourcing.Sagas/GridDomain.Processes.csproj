<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{EBA75163-804C-4C58-8E5E-6764C1155BE5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>GridDomain.Processes</RootNamespace>
    <AssemblyName>GridDomain.Processes</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Automatonymous, Version=3.3.0.0, Culture=neutral, PublicKeyToken=b800c4cfcdeea87b, processorArchitecture=MSIL">
      <HintPath>..\packages\Automatonymous.3.3.0\lib\net452\Automatonymous.dll</HintPath>
    </Reference>
    <Reference Include="Common.Logging, Version=3.3.1.0, Culture=neutral, PublicKeyToken=af08829b84f0328e, processorArchitecture=MSIL">
      <HintPath>..\packages\Common.Logging.3.3.1\lib\net40\Common.Logging.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Common.Logging.Core, Version=3.3.1.0, Culture=neutral, PublicKeyToken=af08829b84f0328e, processorArchitecture=MSIL">
      <HintPath>..\packages\Common.Logging.Core.3.3.1\lib\net40\Common.Logging.Core.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Serilog, Version=2.0.0.0, Culture=neutral, PublicKeyToken=24c2f752a8e58a10, processorArchitecture=MSIL">
      <HintPath>..\packages\Serilog.2.3.0\lib\net46\Serilog.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Creation\CannotFindFactoryForProcessManagerCreation.cs" />
    <Compile Include="Creation\FactoryNotSupportStartMessageException.cs" />
    <Compile Include="AutomatonymousExtensions.cs" />
    <Compile Include="Creation\IProcessManagerCreator.cs" />
    <Compile Include="DomainBind\ProcessManagerDescriptor.cs" />
    <Compile Include="State\CreateNewStateCommand.cs" />
    <Compile Include="IProcessState.cs" />
    <Compile Include="State\ISagaStateCommand.cs" />
    <Compile Include="Process.cs" />
    <Compile Include="State\SagaStateAggregate.cs" />
    <Compile Include="State\SagaReceivedMessage.cs" />
    <Compile Include="ProcessManager.cs" />
    <Compile Include="State\SagaStateCommandHandler.cs" />
    <Compile Include="ProcessTransitionException.cs" />
    <Compile Include="State\SaveStateCommand.cs" />
    <Compile Include="ProcessResult.cs" />
    <Compile Include="IProcessManager.cs" />
    <Compile Include="Creation\IProcessManagerCreatorCatalog.cs" />
    <Compile Include="DomainBind\MessageBind.cs" />
    <Compile Include="DomainBind\SagaDescriptor.cs" />
    <Compile Include="Creation\ProcessManagerСreatorsCatalog.cs" />
    <Compile Include="DomainBind\IProcessManagerDescriptor.cs" />
    <Compile Include="Creation\ISagaCreator.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="State\SagaCreated.cs" />
    <Compile Include="State\SagaStateEvent.cs" />
    <Compile Include="UnbindedMessageReceivedException.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\GridDomain.Common\GridDomain.Common.csproj">
      <Project>{ab9bb393-1874-4421-a78a-55d9977a6173}</Project>
      <Name>GridDomain.Common</Name>
    </ProjectReference>
    <ProjectReference Include="..\GridDomain.CQRS\GridDomain.CQRS.csproj">
      <Project>{80d3b1cd-e656-4243-bcc8-ab6eb694f7c1}</Project>
      <Name>GridDomain.CQRS</Name>
    </ProjectReference>
    <ProjectReference Include="..\GridDomain.EventSourcing\GridDomain.EventSourcing.csproj">
      <Project>{af9dbe6f-985e-43b5-85c6-a7c52e1bd601}</Project>
      <Name>GridDomain.EventSourcing</Name>
    </ProjectReference>
    <ProjectReference Include="..\GridDomain.Logging\GridDomain.Logging.csproj">
      <Project>{E356647A-561E-4290-AD71-EF5DC92BF5C7}</Project>
      <Name>GridDomain.Logging</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <Target Name="_NuProjGetProjectClosure" DependsOnTargets="ResolveProjectReferences" Inputs="%(_MSBuildProjectReferenceExistent.Identity)" Outputs="fake" Returns="@(_ProjectReferenceClosure)">
    <!-- Get closure of indirect references -->
    <MSBuild Projects="@(_MSBuildProjectReferenceExistent)" Targets="_NuProjGetProjectClosure" Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration); %(_MSBuildProjectReferenceExistent.SetPlatform)" ContinueOnError="WarnAndContinue">
      <Output TaskParameter="TargetOutputs" ItemName="_ProjectReferenceClosureWithDuplicates" />
    </MSBuild>
    <!-- Remove duplicates from closure -->
    <RemoveDuplicates Inputs="@(_ProjectReferenceClosureWithDuplicates)">
      <Output TaskParameter="Filtered" ItemName="_ProjectReferenceClosureWithoutMetadata" />
    </RemoveDuplicates>
    <ItemGroup>
      <!-- Remove references that are also direct references -->
      <_ProjectReferenceClosureWithoutMetadata Remove="%(_MSBuildProjectReferenceExistent.FullPath)" />
      <!-- We can now mark all the closure references as indirect -->
      <_ProjectReferenceClosure Include="@(_ProjectReferenceClosureWithoutMetadata)">
        <DependencyKind>Indirect</DependencyKind>
        <PackageDirectory>%(_MSBuildProjectReferenceExistent.PackageDirectory)</PackageDirectory>
        <TargetSubdirectory>%(_MSBuildProjectReferenceExistent.TargetSubdirectory)</TargetSubdirectory>
      </_ProjectReferenceClosure>
      <!-- Now add the direct references, preserving metadata -->
      <_ProjectReferenceClosure Include="@(_MSBuildProjectReferenceExistent->'%(FullPath)')">
        <DependencyKind>Direct</DependencyKind>
      </_ProjectReferenceClosure>
    </ItemGroup>
  </Target>
</Project>